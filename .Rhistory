cluster_rows = T,
clustering_distance_cols = 'correlation',
clustering_distance_rows = 'correlation',
clustering_method = 'ward.D',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_metabric,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 8,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
# another one with T and E annotation
levels(AnnAll_tcga$`THR clusters`) <- c('E3', 'E1', 'E4', 'E2', 'T1')
ann_colors$`THR clusters` <- c('#66a61e', "#E7298A", '#D95F02', "#1B9E77", '#7570b3')
names(ann_colors$`THR clusters`) <- levels(AnnAll_tcga$`THR clusters`)
# fix the cluster names in the pheno table
table(Pheno_tcga$`THR clusters`)
Pheno_tcga$`THR clusters` <- as.factor(Pheno_tcga$`THR clusters`)
levels(Pheno_tcga$`THR clusters`) <- c('E3', 'E1', 'E4', 'E2', 'T1')
#AnnAll_tcga$`THR clusters` <- as.factor(paste0('c', clusters_tcga$`THR clusters`))
table(Pheno_tcga$`THR clusters`)
table(AnnAll_tcga$`THR clusters`)
# fix the pam50 subtypes
Pheno_tcga$Pam50_subtypes <- as.factor(Pheno_tcga$Subtype)
Pheno_tcga$Pam50_subtypes <- gsub('BRCA_', '', Pheno_tcga$Pam50_subtypes)
table(Pheno_tcga$Pam50_subtypes)
## Keep only the relevant information (Metastasis Event and Time)
survival_tcga <- Pheno_tcga[, c("Overall.Survival.Status", "Overall.Survival..Months.",
"Disease.Free.Status", "Disease.Free..Months.",
"Pam50_subtypes", "ER.Status.By.IHC",
"PR.status.by.ihc", "HER2.fish.status", "IHC.HER2", "THR clusters")]
table(survival_tcga$`THR clusters`)
survival_tcga$`THR clusters` <- as.factor(survival_tcga$`THR clusters`)
survival_tcga$Disease.Free.Status <- gsub("\\:.+", "", survival_tcga$Disease.Free.Status)
survival_tcga$Overall.Survival.Status <- gsub("\\:.+", "", survival_tcga$Overall.Survival.Status)
survival_tcga$Disease.Free.Status <- as.numeric(survival_tcga$Disease.Free.Status)
survival_tcga$Overall.Survival.Status <- as.numeric(survival_tcga$Overall.Survival.Status)
table(survival_tcga$Disease.Free.Status)
table(survival_tcga$Overall.Survival.Status)
table(Pheno_tcga$Disease.Free.Status)
table(Pheno_tcga$Overall.Survival.Status)
survival_tcga$Disease.Free..Months. <- as.numeric(survival_tcga$Disease.Free..Months.)
survival_tcga$Overall.Survival..Months. <- as.numeric(survival_tcga$Overall.Survival..Months.)
summary(survival_tcga$Overall.Survival..Months.)
summary(survival_tcga$Disease.Free..Months.)
summary(as.numeric(Pheno_tcga$Overall.Survival..Months.))
summary(as.numeric(Pheno_tcga$Disease.Free..Months.))
# OS
Fit_tcga_os <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ as.factor(`THR clusters`), data = survival_tcga)
# DFS
Fit_tcga_DFS <- survfit(Surv(Disease.Free..Months., Disease.Free.Status) ~ as.factor(`THR clusters`), data = survival_tcga)
############################################################################
############################################################################
# plot OS
cluster_colors <- as.vector(ann_colors$`THR clusters`)
ggsurvplot(Fit_tcga_os,
risk.table = FALSE,
pval = TRUE,
palette = cluster_colors,
#xlim = c(0,120),
legend.labs = levels(survival_tcga$`THR clusters`),
legend.title	= 'THR clusters',
pval.size = 12,
#break.x.by = 20,
ggtheme = theme_survminer(base_size = 18, font.x = c(18, 'bold.italic', 'black'), font.y = c(18, 'bold.italic', 'black'), font.tickslab = c(18, 'plain', 'black'), font.legend = c(18, 'bold', 'black')),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR50 clusters and OS in TCGA')
ggsurvplot(Fit_tcga_DFS,
risk.table = FALSE,
pval = TRUE,
palette = cluster_colors,
#xlim = c(0,120),
legend.labs = levels(survival_tcga$`THR clusters`),
legend.title	= 'THR clusters',
pval.size = 12,
#break.x.by = 20,
ggtheme = theme_survminer(base_size = 18, font.x = c(18, 'bold.italic', 'black'), font.y = c(18, 'bold.italic', 'black'), font.tickslab = c(18, 'plain', 'black'), font.legend = c(18, 'bold', 'black')),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR50 clusters and DFS in TCGA')
?pheatmap
#######################################################
# get the 5 groups
heat_tcga <- pheatmap(Expr_tcga_refAll_heatmap,
scale = "none",
#color = rev(heat.colors(20)),
color =ColPal,
annotation_colors = ann_colors,
cluster_cols = T,
cluster_rows = T,
clustering_distance_cols = 'euclidean',
clustering_distance_rows = 'euclidean',
clustering_method = 'ward.D',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_tcga,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 10,
silent = TRUE,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
clusters_tcga <- as.data.frame(cbind(t(Expr_tcga_refAll_heatmap),
'THR clusters' = cutree(heat_tcga$tree_col,
k = 5)))
table(clusters_tcga$`THR clusters`)
# add the cluster info to the phenotype table
all(rownames(clusters_tcga) == rownames(Pheno_tcga))
Pheno_tcga$`THR clusters` <- clusters_tcga$`THR clusters`
# add the cluster info to the Ann dataframe and re-plot the heatmap
all(rownames(clusters_tcga) == rownames(AnnAll_tcga))
AnnAll_tcga$`THR clusters` <- as.factor(paste0('c', clusters_tcga$`THR clusters`))
table(AnnAll_tcga$`THR clusters`)
# re-order the annotation dataframe then the expression matrix by cluster
#AnnAll_tcga <- AnnAll_tcga[order(AnnAll_tcga$cluster, decreasing = FALSE), ]
#Expr_tcga_refAll_heatmap <- Expr_tcga_refAll_heatmap[, rownames(AnnAll_tcga)]
ann_colors$`THR clusters` <- colorRampPalette(colors = rev(brewer.pal(5,"Dark2")))(5)
names(ann_colors$`THR clusters`) <- levels(AnnAll_tcga$`THR clusters`)
pheatmap(Expr_tcga_refAll_heatmap,
scale = "row",
#color = rev(heat.colors(20)),
color = ColPal,
annotation_colors = ann_colors,
cluster_cols = T,
cluster_rows = T,
clustering_distance_cols = 'correlation',
clustering_distance_rows = 'correlation',
clustering_method = 'ward.D',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_metabric,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 8,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
table(clusters_tcga$`THR clusters`)
# add the cluster info to the phenotype table
all(rownames(clusters_tcga) == rownames(Pheno_tcga))
Pheno_tcga$`THR clusters` <- clusters_tcga$`THR clusters`
# add the cluster info to the Ann dataframe and re-plot the heatmap
all(rownames(clusters_tcga) == rownames(AnnAll_tcga))
AnnAll_tcga$`THR clusters` <- as.factor(paste0('c', clusters_tcga$`THR clusters`))
table(AnnAll_tcga$`THR clusters`)
# re-order the annotation dataframe then the expression matrix by cluster
#AnnAll_tcga <- AnnAll_tcga[order(AnnAll_tcga$cluster, decreasing = FALSE), ]
#Expr_tcga_refAll_heatmap <- Expr_tcga_refAll_heatmap[, rownames(AnnAll_tcga)]
ann_colors$`THR clusters` <- colorRampPalette(colors = rev(brewer.pal(5,"Dark2")))(5)
names(ann_colors$`THR clusters`) <- levels(AnnAll_tcga$`THR clusters`)
pheatmap(Expr_tcga_refAll_heatmap,
scale = "row",
#color = rev(heat.colors(20)),
color = ColPal,
annotation_colors = ann_colors,
cluster_cols = T,
cluster_rows = T,
clustering_distance_cols = 'correlation',
clustering_distance_rows = 'correlation',
clustering_method = 'ward.D',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_metabric,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 8,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
pheatmap(Expr_tcga_refAll_heatmap,
scale = "none",
#color = rev(heat.colors(20)),
color = ColPal,
annotation_colors = ann_colors,
cluster_cols = T,
cluster_rows = T,
clustering_distance_cols = 'euclidean',
clustering_distance_rows = 'euclidean',
clustering_method = 'ward.D',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_metabric,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 8,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
# another one with T and E annotation
levels(AnnAll_tcga$`THR clusters`) <- c('E3', 'E1', 'E4', 'E2', 'T1')
ann_colors$`THR clusters` <- c('#66a61e', "#E7298A", '#D95F02', "#1B9E77", '#7570b3')
names(ann_colors$`THR clusters`) <- levels(AnnAll_tcga$`THR clusters`)
# fix the cluster names in the pheno table
table(Pheno_tcga$`THR clusters`)
Pheno_tcga$`THR clusters` <- as.factor(Pheno_tcga$`THR clusters`)
levels(Pheno_tcga$`THR clusters`) <- c('E3', 'E1', 'E4', 'E2', 'T1')
#AnnAll_tcga$`THR clusters` <- as.factor(paste0('c', clusters_tcga$`THR clusters`))
table(Pheno_tcga$`THR clusters`)
table(AnnAll_tcga$`THR clusters`)
# fix the pam50 subtypes
Pheno_tcga$Pam50_subtypes <- as.factor(Pheno_tcga$Subtype)
Pheno_tcga$Pam50_subtypes <- gsub('BRCA_', '', Pheno_tcga$Pam50_subtypes)
table(Pheno_tcga$Pam50_subtypes)
#############################################################################################################
##############################################################################################################
## Keep only the relevant information (Metastasis Event and Time)
survival_tcga <- Pheno_tcga[, c("Overall.Survival.Status", "Overall.Survival..Months.",
"Disease.Free.Status", "Disease.Free..Months.",
"Pam50_subtypes", "ER.Status.By.IHC",
"PR.status.by.ihc", "HER2.fish.status", "IHC.HER2", "THR clusters")]
table(survival_tcga$`THR clusters`)
survival_tcga$`THR clusters` <- as.factor(survival_tcga$`THR clusters`)
survival_tcga$Disease.Free.Status <- gsub("\\:.+", "", survival_tcga$Disease.Free.Status)
survival_tcga$Overall.Survival.Status <- gsub("\\:.+", "", survival_tcga$Overall.Survival.Status)
survival_tcga$Disease.Free.Status <- as.numeric(survival_tcga$Disease.Free.Status)
survival_tcga$Overall.Survival.Status <- as.numeric(survival_tcga$Overall.Survival.Status)
table(survival_tcga$Disease.Free.Status)
table(survival_tcga$Overall.Survival.Status)
table(Pheno_tcga$Disease.Free.Status)
table(Pheno_tcga$Overall.Survival.Status)
survival_tcga$Disease.Free..Months. <- as.numeric(survival_tcga$Disease.Free..Months.)
survival_tcga$Overall.Survival..Months. <- as.numeric(survival_tcga$Overall.Survival..Months.)
summary(survival_tcga$Overall.Survival..Months.)
summary(survival_tcga$Disease.Free..Months.)
summary(as.numeric(Pheno_tcga$Overall.Survival..Months.))
summary(as.numeric(Pheno_tcga$Disease.Free..Months.))
# OS
Fit_tcga_os <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ as.factor(`THR clusters`), data = survival_tcga)
# DFS
Fit_tcga_DFS <- survfit(Surv(Disease.Free..Months., Disease.Free.Status) ~ as.factor(`THR clusters`), data = survival_tcga)
############################################################################
############################################################################
# plot OS
cluster_colors <- as.vector(ann_colors$`THR clusters`)
ggsurvplot(Fit_tcga_os,
risk.table = FALSE,
pval = TRUE,
palette = cluster_colors,
#xlim = c(0,120),
legend.labs = levels(survival_tcga$`THR clusters`),
legend.title	= 'THR clusters',
pval.size = 12,
#break.x.by = 20,
ggtheme = theme_survminer(base_size = 18, font.x = c(18, 'bold.italic', 'black'), font.y = c(18, 'bold.italic', 'black'), font.tickslab = c(18, 'plain', 'black'), font.legend = c(18, 'bold', 'black')),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR50 clusters and OS in TCGA')
#######################################################
# get the 5 groups
heat_tcga <- pheatmap(Expr_tcga_refAll_heatmap,
scale = "none",
#color = rev(heat.colors(20)),
color =ColPal,
annotation_colors = ann_colors,
cluster_cols = T,
cluster_rows = T,
clustering_distance_cols = 'maximum',
clustering_distance_rows = 'maximum',
clustering_method = 'ward.D',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_tcga,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 10,
silent = TRUE,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
clusters_tcga <- as.data.frame(cbind(t(Expr_tcga_refAll_heatmap),
'THR clusters' = cutree(heat_tcga$tree_col,
k = 5)))
table(clusters_tcga$`THR clusters`)
# add the cluster info to the phenotype table
all(rownames(clusters_tcga) == rownames(Pheno_tcga))
Pheno_tcga$`THR clusters` <- clusters_tcga$`THR clusters`
# add the cluster info to the Ann dataframe and re-plot the heatmap
all(rownames(clusters_tcga) == rownames(AnnAll_tcga))
AnnAll_tcga$`THR clusters` <- as.factor(paste0('c', clusters_tcga$`THR clusters`))
table(AnnAll_tcga$`THR clusters`)
# re-order the annotation dataframe then the expression matrix by cluster
#AnnAll_tcga <- AnnAll_tcga[order(AnnAll_tcga$cluster, decreasing = FALSE), ]
#Expr_tcga_refAll_heatmap <- Expr_tcga_refAll_heatmap[, rownames(AnnAll_tcga)]
ann_colors$`THR clusters` <- colorRampPalette(colors = rev(brewer.pal(5,"Dark2")))(5)
names(ann_colors$`THR clusters`) <- levels(AnnAll_tcga$`THR clusters`)
pheatmap(Expr_tcga_refAll_heatmap,
scale = "none",
#color = rev(heat.colors(20)),
color = ColPal,
annotation_colors = ann_colors,
cluster_cols = T,
cluster_rows = T,
clustering_distance_cols = 'maximum',
clustering_distance_rows = 'maximum',
clustering_method = 'ward.D',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_metabric,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 8,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
# another one with T and E annotation
levels(AnnAll_tcga$`THR clusters`) <- c('E3', 'E1', 'E4', 'E2', 'T1')
ann_colors$`THR clusters` <- c('#66a61e', "#E7298A", '#D95F02', "#1B9E77", '#7570b3')
names(ann_colors$`THR clusters`) <- levels(AnnAll_tcga$`THR clusters`)
# fix the cluster names in the pheno table
table(Pheno_tcga$`THR clusters`)
Pheno_tcga$`THR clusters` <- as.factor(Pheno_tcga$`THR clusters`)
levels(Pheno_tcga$`THR clusters`) <- c('E3', 'E1', 'E4', 'E2', 'T1')
#AnnAll_tcga$`THR clusters` <- as.factor(paste0('c', clusters_tcga$`THR clusters`))
table(Pheno_tcga$`THR clusters`)
table(AnnAll_tcga$`THR clusters`)
# fix the pam50 subtypes
Pheno_tcga$Pam50_subtypes <- as.factor(Pheno_tcga$Subtype)
Pheno_tcga$Pam50_subtypes <- gsub('BRCA_', '', Pheno_tcga$Pam50_subtypes)
table(Pheno_tcga$Pam50_subtypes)
#############################################################################################################
##############################################################################################################
## Keep only the relevant information (Metastasis Event and Time)
survival_tcga <- Pheno_tcga[, c("Overall.Survival.Status", "Overall.Survival..Months.",
"Disease.Free.Status", "Disease.Free..Months.",
"Pam50_subtypes", "ER.Status.By.IHC",
"PR.status.by.ihc", "HER2.fish.status", "IHC.HER2", "THR clusters")]
table(survival_tcga$`THR clusters`)
survival_tcga$`THR clusters` <- as.factor(survival_tcga$`THR clusters`)
survival_tcga$Disease.Free.Status <- gsub("\\:.+", "", survival_tcga$Disease.Free.Status)
survival_tcga$Overall.Survival.Status <- gsub("\\:.+", "", survival_tcga$Overall.Survival.Status)
survival_tcga$Disease.Free.Status <- as.numeric(survival_tcga$Disease.Free.Status)
survival_tcga$Overall.Survival.Status <- as.numeric(survival_tcga$Overall.Survival.Status)
table(survival_tcga$Disease.Free.Status)
table(survival_tcga$Overall.Survival.Status)
table(Pheno_tcga$Disease.Free.Status)
table(Pheno_tcga$Overall.Survival.Status)
survival_tcga$Disease.Free..Months. <- as.numeric(survival_tcga$Disease.Free..Months.)
survival_tcga$Overall.Survival..Months. <- as.numeric(survival_tcga$Overall.Survival..Months.)
summary(survival_tcga$Overall.Survival..Months.)
summary(survival_tcga$Disease.Free..Months.)
summary(as.numeric(Pheno_tcga$Overall.Survival..Months.))
summary(as.numeric(Pheno_tcga$Disease.Free..Months.))
# OS
Fit_tcga_os <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ as.factor(`THR clusters`), data = survival_tcga)
# DFS
Fit_tcga_DFS <- survfit(Surv(Disease.Free..Months., Disease.Free.Status) ~ as.factor(`THR clusters`), data = survival_tcga)
#######################
############################################################################
############################################################################
# plot OS
cluster_colors <- as.vector(ann_colors$`THR clusters`)
ggsurvplot(Fit_tcga_os,
risk.table = FALSE,
pval = TRUE,
palette = cluster_colors,
#xlim = c(0,120),
legend.labs = levels(survival_tcga$`THR clusters`),
legend.title	= 'THR clusters',
pval.size = 12,
#break.x.by = 20,
ggtheme = theme_survminer(base_size = 18, font.x = c(18, 'bold.italic', 'black'), font.y = c(18, 'bold.italic', 'black'), font.tickslab = c(18, 'plain', 'black'), font.legend = c(18, 'bold', 'black')),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR50 clusters and OS in TCGA')
#######################################################
# get the 5 groups
heat_tcga <- pheatmap(Expr_tcga_refAll_heatmap,
scale = "none",
#color = rev(heat.colors(20)),
color =ColPal,
annotation_colors = ann_colors,
cluster_cols = T,
cluster_rows = T,
clustering_distance_cols = 'correlation',
clustering_distance_rows = 'correlation',
clustering_method = 'complete',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_tcga,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 10,
silent = TRUE,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
clusters_tcga <- as.data.frame(cbind(t(Expr_tcga_refAll_heatmap),
'THR clusters' = cutree(heat_tcga$tree_col,
k = 5)))
table(clusters_tcga$`THR clusters`)
# add the cluster info to the phenotype table
all(rownames(clusters_tcga) == rownames(Pheno_tcga))
Pheno_tcga$`THR clusters` <- clusters_tcga$`THR clusters`
# add the cluster info to the Ann dataframe and re-plot the heatmap
all(rownames(clusters_tcga) == rownames(AnnAll_tcga))
AnnAll_tcga$`THR clusters` <- as.factor(paste0('c', clusters_tcga$`THR clusters`))
table(AnnAll_tcga$`THR clusters`)
# re-order the annotation dataframe then the expression matrix by cluster
#AnnAll_tcga <- AnnAll_tcga[order(AnnAll_tcga$cluster, decreasing = FALSE), ]
#Expr_tcga_refAll_heatmap <- Expr_tcga_refAll_heatmap[, rownames(AnnAll_tcga)]
ann_colors$`THR clusters` <- colorRampPalette(colors = rev(brewer.pal(5,"Dark2")))(5)
names(ann_colors$`THR clusters`) <- levels(AnnAll_tcga$`THR clusters`)
pheatmap(Expr_tcga_refAll_heatmap,
scale = "none",
#color = rev(heat.colors(20)),
color = ColPal,
annotation_colors = ann_colors,
cluster_cols = T,
cluster_rows = T,
clustering_distance_cols = 'correlation',
clustering_distance_rows = 'correlation',
clustering_method = 'complete',
show_colnames = F,
show_rownames = T,
annotation_col = AnnAll_tcga,
annotation_names_col = T,
#annotation_row = AnnAll_metabric,
annotation_names_row = T,
fontsize = 7,
#fontsize_col = 3,
fontsize_row = 8,
cex = 1,
cutree_cols = 5,
cutree_rows = 5,
breaks = seq(-1, 1, by = 0.1),
main = "")
# another one with T and E annotation
levels(AnnAll_tcga$`THR clusters`) <- c('E3', 'E1', 'E4', 'E2', 'T1')
ann_colors$`THR clusters` <- c('#66a61e', "#E7298A", '#D95F02', "#1B9E77", '#7570b3')
names(ann_colors$`THR clusters`) <- levels(AnnAll_tcga$`THR clusters`)
## Keep only the relevant information (Metastasis Event and Time)
survival_tcga <- Pheno_tcga[, c("Overall.Survival.Status", "Overall.Survival..Months.",
"Disease.Free.Status", "Disease.Free..Months.",
"Pam50_subtypes", "ER.Status.By.IHC",
"PR.status.by.ihc", "HER2.fish.status", "IHC.HER2", "THR clusters")]
table(survival_tcga$`THR clusters`)
survival_tcga$`THR clusters` <- as.factor(survival_tcga$`THR clusters`)
survival_tcga$Disease.Free.Status <- gsub("\\:.+", "", survival_tcga$Disease.Free.Status)
survival_tcga$Overall.Survival.Status <- gsub("\\:.+", "", survival_tcga$Overall.Survival.Status)
survival_tcga$Disease.Free.Status <- as.numeric(survival_tcga$Disease.Free.Status)
survival_tcga$Overall.Survival.Status <- as.numeric(survival_tcga$Overall.Survival.Status)
table(survival_tcga$Disease.Free.Status)
table(survival_tcga$Overall.Survival.Status)
table(Pheno_tcga$Disease.Free.Status)
table(Pheno_tcga$Overall.Survival.Status)
survival_tcga$Disease.Free..Months. <- as.numeric(survival_tcga$Disease.Free..Months.)
survival_tcga$Overall.Survival..Months. <- as.numeric(survival_tcga$Overall.Survival..Months.)
summary(survival_tcga$Overall.Survival..Months.)
summary(survival_tcga$Disease.Free..Months.)
summary(as.numeric(Pheno_tcga$Overall.Survival..Months.))
summary(as.numeric(Pheno_tcga$Disease.Free..Months.))
# OS
Fit_tcga_os <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ as.factor(`THR clusters`), data = survival_tcga)
# DFS
Fit_tcga_DFS <- survfit(Surv(Disease.Free..Months., Disease.Free.Status) ~ as.factor(`THR clusters`), data = survival_tcga)
####################
############################################################################
############################################################################
# plot OS
cluster_colors <- as.vector(ann_colors$`THR clusters`)
ggsurvplot(Fit_tcga_os,
risk.table = FALSE,
pval = TRUE,
palette = cluster_colors,
#xlim = c(0,120),
legend.labs = levels(survival_tcga$`THR clusters`),
legend.title	= 'THR clusters',
pval.size = 12,
#break.x.by = 20,
ggtheme = theme_survminer(base_size = 18, font.x = c(18, 'bold.italic', 'black'), font.y = c(18, 'bold.italic', 'black'), font.tickslab = c(18, 'plain', 'black'), font.legend = c(18, 'bold', 'black')),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR50 clusters and OS in TCGA')
