require(RColorBrewer)
require(ggplot2)
require(reshape)
require(plotROC)
library(mltools)
library(xtable)
library(dplyr)
library(precrec)
library(patchwork)
library(survminer)
library(survival)
#################
THR_signature <- readxl::read_xlsx("./data/THR Signatures_sep23.xlsx")
# get THR 25 and 50
THR_25 <- THR_signature$`THR-25`[!is.na(THR_signature$`THR-25`)]
THR_50_1 <- THR_signature$`THR-50.1`[!is.na(THR_signature$`THR-50.1`)]
THR_50_2 <- THR_signature$`THR-50.2`[!is.na(THR_signature$`THR-50.2`)]
THR_50_1 <- gsub('-', '', THR_50_1)
THR_50_2 <- gsub('-', '', THR_50_2)
################
# Load the  expression and pheno data
load('./objs/forKTSP.rda')
### combine in 1 dataset: Training
Data_metabric <- as.data.frame(cbind(t(Expr_metabric), group_metabric))
Data_metabric$group_metabric <- as.factor(Data_metabric$group_metabric)
levels(Data_metabric$group_metabric) <- c('0', '1')
colnames(Data_metabric)[colnames(Data_metabric) %in% c('group_metabric')] <- c('os')
##########
### tcga
Data_tcga <- as.data.frame(cbind(t(Expr_tcga), group_tcga))
Data_tcga$group_tcga <- as.factor(Data_tcga$group_tcga)
levels(Data_tcga$group_tcga) <- c('0', '1')
colnames(Data_tcga)[colnames(Data_tcga) %in% c('group_tcga')] <- c('os')
###########################################################################
### TRAINING using logistic regression
###########################################################################
rownames(Expr_metabric)[grep('^ZNF652', rownames(Expr_metabric))]
rownames(Expr_tcga)[grep('^ZNF652', rownames(Expr_tcga))]
# filter the THR signatures to include only the genes present in the expr matrices
THR_25_fil <- THR_25[THR_25 %in% rownames(Expr_metabric) & THR_25 %in% rownames(Expr_tcga)]
THR_50_1_fil <- THR_50_1[THR_50_1 %in% rownames(Expr_metabric) & THR_50_1 %in% rownames(Expr_tcga)]
THR_50_2_fil <- THR_50_2[THR_50_2 %in% rownames(Expr_metabric) & THR_50_2 %in% rownames(Expr_tcga)]
THR_50_1_fil_tcga <- THR_50_1[THR_50_1 %in% rownames(Expr_tcga)]
setdiff(THR_50_1, THR_50_1_fil)
setdiff(THR_50_2, THR_50_2_fil)
###################
# the model
THR25_model <- glm(as.formula((paste("os ~", paste(THR_25_fil, collapse = "+")))), data = Data_metabric, family = "binomial")
summary(THR25_model)
THR50_1_model <- glm(as.formula((paste("os ~", paste(THR_50_1_fil, collapse = "+")))), data = Data_metabric, family = "binomial")
summary(THR50_1_model)
THR50_2_model <- glm(as.formula((paste("os ~", paste(THR_50_2_fil, collapse = "+")))), data = Data_metabric, family = "binomial")
summary(THR50_2_model)
ke predictions
Train_prob_THR25 <- THR25_model %>% predict(Data_metabric , type = "response")
Train_prob_THR50_1 <- THR50_1_model %>% predict(Data_metabric , type = "response")
Train_prob_THR50_2 <- THR50_2_model %>% predict(Data_metabric , type = "response")
### Threshold
thr_THR25 <- coords(roc(group_metabric, Train_prob_THR25, levels = c("0", "1"), direction = "<"), "best")["threshold"]
thr_THR25
thr_THR50_1 <- coords(roc(group_metabric, Train_prob_THR50_1, levels = c("0", "1"), direction = "<"), "best")["threshold"]
thr_THR50_1
thr_THR50_2 <- coords(roc(group_metabric, Train_prob_THR50_2, levels = c("0", "1"), direction = "<"), "best")["threshold"]
thr_THR50_2
### ROC Curve
ROCTrain_THR25 <- roc(group_metabric, Train_prob_THR25, plot = F, print.thres=thr_THR25$threshold, print.auc=TRUE, print.auc.col="black", ci = T, levels = c("0", "1"), direction = "<", col="blue", lwd=2, grid=TRUE)
ROCTrain_THR25
ROCTrain_THR50_1 <- roc(group_metabric, Train_prob_THR50_1, plot = F, print.thres=thr_THR50_1$threshold, print.auc=TRUE, print.auc.col="black", ci = T, levels = c("0", "1"), direction = "<", col="blue", lwd=2, grid=TRUE)
ROCTrain_THR50_1
ROCTrain_THR50_2 <- roc(group_metabric, Train_prob_THR50_2, plot = F, print.thres=thr_THR50_2$threshold, print.auc=TRUE, print.auc.col="black", ci = T, levels = c("0", "1"), direction = "<", col="blue", lwd=2, grid=TRUE)
ROCTrain_THR50_2
### Get predictions based on best threshold from ROC curve
Train_predClasses_THR25 <- ifelse(Train_prob_THR25 >= thr_THR25$threshold, "1", "0")
table(Train_predClasses_THR25)
Train_predClasses_THR25 <- factor(Train_predClasses_THR25, levels = c('0', '1'))
Train_predClasses_THR50_1 <- ifelse(Train_prob_THR50_1 >= thr_THR50_1$threshold, "1", "0")
table(Train_predClasses_THR50_1)
Train_predClasses_THR50_1 <- factor(Train_predClasses_THR50_1, levels = c('0', '1'))
Train_predClasses_THR50_2 <- ifelse(Train_prob_THR50_2 >= thr_THR50_2$threshold, "1", "0")
table(Train_predClasses_THR50_2)
Train_predClasses_THR50_2 <- factor(Train_predClasses_THR50_2, levels = c('0', '1'))
### Resubstitution performance in the TRAINING set
ConfusionTrain_THR25 <- confusionMatrix(Train_predClasses_THR25, group_metabric, positive = "1", mode = "everything")
ConfusionTrain_THR25
ConfusionTrain_THR50_1 <- confusionMatrix(Train_predClasses_THR50_1, group_metabric, positive = "1", mode = "everything")
ConfusionTrain_THR50_1
ConfusionTrain_THR50_2 <- confusionMatrix(Train_predClasses_THR50_2, group_metabric, positive = "1", mode = "everything")
ConfusionTrain_THR50_2
## MCC
MCC_Train_THR25 <- mltools::mcc(pred = Train_predClasses_THR25, actuals = group_metabric)
MCC_Train_THR25
MCC_Train_THR50_1 <- mltools::mcc(pred = Train_predClasses_THR50_1, actuals = group_metabric)
MCC_Train_THR50_1
MCC_Train_THR50_2 <- mltools::mcc(pred = Train_predClasses_THR50_2, actuals = group_metabric)
MCC_Train_THR50_2
#########################################################################
#########################################################################
### Testing
tcga_prob_THR25 <- THR25_model %>% predict(Data_tcga , type = "response")
tcga_prob_THR50_1 <-  THR50_1_model %>% predict(Data_tcga , type = "response")
tcga_prob_THR50_2 <- THR50_2_model %>% predict(Data_tcga , type = "response")
### ROC
ROC_tcga_THR25 <- roc(group_tcga, tcga_prob_THR25, plot = F, print.thres=thr_THR25$threshold, print.auc=TRUE, print.auc.col="black", ci = T, levels = c("0", "1"), direction = "<", col="blue", lwd=2, grid=TRUE)
ROC_tcga_THR25
ROC_tcga_THR50_1 <- roc(group_tcga, tcga_prob_THR50_1, plot = F, print.thres=thr_THR50_1$threshold, print.auc=TRUE, print.auc.col="black", ci = T, levels = c("0", "1"), direction = "<", col="blue", lwd=2, grid=TRUE)
ROC_tcga_THR50_1
ROC_tcga_THR50_2 <- roc(group_tcga, tcga_prob_THR50_2, plot = F, print.thres=thr_THR50_2$threshold, print.auc=TRUE, print.auc.col="black", ci = T, levels = c("0", "1"), direction = "<", col="blue", lwd=2, grid=TRUE)
ROC_tcga_THR50_2
############################
### Get predictions based on best threshold from ROC curve
tcga_predClasses_THR25 <- ifelse(tcga_prob_THR25 >= thr_THR25$threshold, "1", "0")
table(tcga_predClasses_THR25)
tcga_predClasses_THR25 <- factor(tcga_predClasses_THR25, levels = c('0', '1'))
tcga_predClasses_THR50_1 <- ifelse(tcga_prob_THR50_1 >= thr_THR50_1$threshold, "1", "0")
table(tcga_predClasses_THR50_1)
tcga_predClasses_THR50_1 <- factor(tcga_predClasses_THR50_1, levels = c('0', '1'))
tcga_predClasses_THR50_2 <- ifelse(tcga_prob_THR50_2 >= thr_THR50_2$threshold, "1", "0")
table(tcga_predClasses_THR50_2)
tcga_predClasses_THR50_2 <- factor(tcga_predClasses_THR50_2, levels = c('0', '1'))
##################################
##################################
### CI  in testing 1
Confusion_tcga_THR25 <- confusionMatrix(tcga_predClasses_THR25, group_tcga, positive = "1", mode = "everything")
Confusion_tcga_THR25
Confusion_tcga_THR50_1 <- confusionMatrix(tcga_predClasses_THR50_1, group_tcga, positive = "1", mode = "everything")
Confusion_tcga_THR50_1
Confusion_tcga_THR50_2 <- confusionMatrix(tcga_predClasses_THR50_2, group_tcga, positive = "1", mode = "everything")
Confusion_tcga_THR50_2
################
## MCC
MCC_tcga_THR25 <- mltools::mcc(pred = tcga_predClasses_THR25, actuals = group_tcga)
MCC_tcga_THR25
MCC_tcga_THR50_1 <- mltools::mcc(pred = tcga_predClasses_THR50_1, actuals = group_tcga)
MCC_tcga_THR50_1
MCC_tcga_THR50_2 <- mltools::mcc(pred = tcga_predClasses_THR50_2, actuals = group_tcga)
MCC_tcga_THR50_2
colnames(Pheno_metabric)
##########################
## Keep only the relevant information (Metastasis Event and Time)
Phenotype_metabric <- cbind(Pheno_metabric[, c("Overall.Survival.Status", "Overall.Survival..Months.", "Relapse.Free.Status", "Relapse.Free.Status..Months.")],
Train_prob_THR25, Train_prob_THR50_1, Train_prob_THR50_2, Train_predClasses_THR25, Train_predClasses_THR50_1, Train_predClasses_THR50_2)
Phenotype_tcga <- cbind(Pheno_tcga[, c("Overall.Survival.Status", "Overall.Survival..Months.", "Progression.Free.Status", "Progress.Free.Survival..Months.")],
tcga_prob_THR25, tcga_prob_THR50_1, tcga_prob_THR50_2, tcga_predClasses_THR25, tcga_predClasses_THR50_1, tcga_predClasses_THR50_2)
# create a merged pdata and Z-scores object
CoxData_metabric <- data.frame(Phenotype_metabric)
CoxData_tcga <- data.frame(Phenotype_tcga)
# divide the probabilities into quartiles
CoxData_metabric <- CoxData_metabric %>%
mutate(metabric_prob_THR25_quartiles = ntile(Train_prob_THR25, 4),
metabric_prob_THR50_1_quartiles = ntile(Train_prob_THR50_1, 4),
metabric_prob_THR50_2_quartiles = ntile(Train_prob_THR50_2, 4))
CoxData_tcga <- CoxData_tcga %>%
mutate(tcga_prob_THR25_quartiles = ntile(tcga_prob_THR25, 4),
tcga_prob_THR50_1_quartiles = ntile(tcga_prob_THR50_1, 4),
tcga_prob_THR50_2_quartiles = ntile(tcga_prob_THR50_2, 4))
## by quartiles
Fit_sig_metabric_os_THR25_quartiles <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ metabric_prob_THR25_quartiles, data = CoxData_metabric)
Fit_sig_metabric_os_THR50_1_quartiles <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ metabric_prob_THR50_1_quartiles, data = CoxData_metabric)
Fit_sig_metabric_os_THR50_2_quartiles <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ metabric_prob_THR50_2_quartiles, data = CoxData_metabric)
# OS
## metabric all genes
Fit_sig_metabric_os_THR25 <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_predClasses_THR25, data = CoxData_metabric)
Fit_sig_metabric_os_THR50_1 <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_predClasses_THR50_1, data = CoxData_metabric)
Fit_sig_metabric_os_THR50_2 <- survfit(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_predClasses_THR50_2, data = CoxData_metabric)
# RFS
## metabric all genes
Fit_sig_metabric_RFS_THR25 <- survfit(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_predClasses_THR25, data = CoxData_metabric)
Fit_sig_metabric_RFS_THR50_1 <- survfit(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_predClasses_THR50_1, data = CoxData_metabric)
Fit_sig_metabric_RFS_THR50_2 <- survfit(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_predClasses_THR50_2, data = CoxData_metabric)
## by quartiles
Fit_sig_metabric_RFS_THR25_quartiles <- survfit(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ metabric_prob_THR25_quartiles, data = CoxData_metabric)
Fit_sig_metabric_RFS_THR50_1_quartiles <- survfit(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ metabric_prob_THR50_1_quartiles, data = CoxData_metabric)
Fit_sig_metabric_RFS_THR50_2_quartiles <- survfit(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ metabric_prob_THR50_2_quartiles, data = CoxData_metabric)
ggsurvplot(Fit_sig_metabric_THR50_1,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_1 (logistic regression) and METABRIC OS')
ggsurvplot(Fit_sig_metabric_os_THR50_1,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_1 (logistic regression) and METABRIC OS')
ggsurvplot(Fit_sig_metabric_RFS_THR25,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 25 (logistic regression) and METABRIC RFS')
# by quartiles
pdf("./figures/logreg/THR25_metabric_os_quartiles.pdf", width = 8, height = 8, onefile = F)
ggsurvplot(Fit_sig_metabric_os_THR25_quartiles,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 25 (logistic regression) and METABRIC OS: quartiles')
dev.off()
ggsurvplot(Fit_sig_metabric_RFS_THR25,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 25 (logistic regression) and METABRIC RFS')
pdf("./figures/logreg/THR25_metabric_RFS_allpairs.pdf", width = 8, height = 8, onefile = F)
ggsurvplot(Fit_sig_metabric_RFS_THR25,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 25 (logistic regression) and METABRIC RFS')
dev.off()
ggsurvplot(Fit_sig_metabric_RFS_THR50_1,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_1 (logistic regression) and METABRIC RFS')
pdf("./figures/logreg/THR50_1_metabric_RFS_allpairs.pdf", width = 8, height = 8, onefile = F)
ggsurvplot(Fit_sig_metabric_RFS_THR50_1,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_1 (logistic regression) and METABRIC RFS')
dev.off()
ggsurvplot(Fit_sig_metabric_RFS_THR50_2,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_2 (logistic regression) and METABRIC RFS')
pdf("./figures/logreg/THR50_1_metabric_RFS_allpairs.pdf", width = 8, height = 8, onefile = F)
ggsurvplot(Fit_sig_metabric_RFS_THR50_1,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_1 (logistic regression) and METABRIC RFS')
dev.off()
pdf("./figures/logreg/THR50_2_metabric_RFS_allpairs.pdf", width = 8, height = 8, onefile = F)
ggsurvplot(Fit_sig_metabric_RFS_THR50_2,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_2 (logistic regression) and METABRIC RFS')
dev.off()
ggsurvplot(Fit_sig_metabric_RFS_THR25_quartiles,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 25 (logistic regression) and METABRIC RFS: quartiles')
########
# by quartiles
pdf("./figures/logreg/THR25_metabric_RFS_quartiles.pdf", width = 8, height = 8, onefile = F)
ggsurvplot(Fit_sig_metabric_RFS_THR25_quartiles,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 25 (logistic regression) and METABRIC RFS: quartiles')
dev.off()
pdf("./figures/logreg/THR50_1_metabric_RFS_quartiles.pdf", width = 8, height = 8, onefile = F)
ggsurvplot(Fit_sig_metabric_RFS_THR50_1_quartiles,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_1 (logistic regression) and METABRIC RFS: quartiles')
dev.off()
pdf("./figures/logreg/THR50_2_metabric_RFS_quartiles.pdf", width = 8, height = 8, onefile = F)
ggsurvplot(Fit_sig_metabric_RFS_THR50_2_quartiles,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_2 (logistic regression) and METABRIC RFS: quartiles')
dev.off()
ggsurvplot(Fit_sig_metabric_RFS_THR25_quartiles,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 25 (logistic regression) and METABRIC RFS: quartiles')
ggsurvplot(Fit_sig_metabric_RFS_THR50_1_quartiles,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_1 (logistic regression) and METABRIC RFS: quartiles')
ggsurvplot(Fit_sig_metabric_RFS_THR50_2_quartiles,
risk.table = FALSE,
pval = TRUE,
ggtheme = theme_minimal(),
risk.table.y.text.col = FALSE,
risk.table.y.text = FALSE, title = 'THR 50_2 (logistic regression) and METABRIC RFS: quartiles')
########
# by predictions
Fit_sig_metabric_coxph_THR25 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR25, data = CoxData_metabric)
summary(Fit_sig_metabric_coxph_THR25)
Fit_sig_metabric_coxph_THR50_1 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR50_1, data = CoxData_metabric)
summary(Fit_sig_metabric_coxph_THR50_1)
Fit_sig_metabric_coxph_THR50_2 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR50_2, data = CoxData_metabric)
########
# by predictions
Fit_sig_metabric_os_coxph_THR25 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR25, data = CoxData_metabric)
summary(Fit_sig_metabric_os_coxph_THR25)
Fit_sig_metabric_os_coxph_THR50_1 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR50_1, data = CoxData_metabric)
summary(Fit_sig_metabric_coxph_THR50_1)
Fit_sig_metabric_os_coxph_THR50_2 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR50_2, data = CoxData_metabric)
summary(Fit_sig_metabric_os_coxph_THR50_2)
########
# RFS
Fit_sig_metabric_RFS_coxph_THR25 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR25, data = CoxData_metabric)
summary(Fit_sig_metabric_RFS_coxph_THR25)
Fit_sig_metabric_RFS_coxph_THR50_1 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR50_1, data = CoxData_metabric)
summary(Fit_sig_metabric_coxph_THR50_1)
Fit_sig_metabric_RFS_coxph_THR50_2 <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ Train_prob_THR50_2, data = CoxData_metabric)
summary(Fit_sig_metabric_RFS_coxph_THR50_2)
ggforest(Fit_sig_metabric_coxph_THR25, fontsize = 0.5)
ggforest(Fit_sig_metabric_RFS_coxph_THR25, fontsize = 0.5)
summary(Fit_sig_metabric_RFS_coxph_THR25)
########
# RFS
Fit_sig_metabric_RFS_coxph_THR25 <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_prob_THR25, data = CoxData_metabric)
summary(Fit_sig_metabric_RFS_coxph_THR25)
Fit_sig_metabric_RFS_coxph_THR50_1 <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_prob_THR50_1, data = CoxData_metabric)
summary(Fit_sig_metabric_coxph_THR50_1)
########
# RFS
Fit_sig_metabric_RFS_coxph_THR25 <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_prob_THR25, data = CoxData_metabric)
Fit_sig_metabric_RFS_coxph_THR50_1 <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_prob_THR50_1, data = CoxData_metabric)
summary(Fit_sig_metabric_RFS_coxph_THR50_1)
THR_50_1_fil
THR_50_1_fil_tcga <- THR_50_1[THR_50_1 %in% rownames(Expr_metabric)]
THR_50_1_fil_tcga
Train_prob_THR25
CoxData_metabric
########
# by quartiles
table(CoxData_metabric$metabric_prob_THR25_quartiles)
########
# by quartiles
levels(CoxData_metabric$metabric_prob_THR25_quartiles)
########
# by quartiles
CoxData_metabric$metabric_prob_THR25_quartiles <- factor(CoxData_metabric$metabric_prob_THR25_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR25_quartiles)
levels(CoxData_metabric$metabric_prob_THR25_quartiles) <- paste('Q', levels(CoxData_metabric$metabric_prob_THR25_quartiles))
levels(CoxData_metabric$metabric_prob_THR25_quartiles)
# create a merged pdata and Z-scores object
CoxData_metabric <- data.frame(Phenotype_metabric)
# divide the probabilities into quartiles
CoxData_metabric <- CoxData_metabric %>%
mutate(metabric_prob_THR25_quartiles = ntile(Train_prob_THR25, 4),
metabric_prob_THR50_1_quartiles = ntile(Train_prob_THR50_1, 4),
metabric_prob_THR50_2_quartiles = ntile(Train_prob_THR50_2, 4))
########
# by quartiles
CoxData_metabric$metabric_prob_THR25_quartiles <- factor(CoxData_metabric$metabric_prob_THR25_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR25_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR25_quartiles))
levels(CoxData_metabric$metabric_prob_THR25_quartiles)
CoxData_metabric$metabric_prob_THR50_1_quartiles <- factor(CoxData_metabric$metabric_prob_THR50_1_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR50_1_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR50_1_quartiles))
CoxData_metabric$metabric_prob_THR50_2_quartiles <- factor(CoxData_metabric$metabric_prob_THR50_2_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR50_2_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR50_2_quartiles))
Fit_sig_metabric_os_coxph_THR25_quartiles <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ metabric_prob_THR25_quartiles, data = CoxData_metabric)
summary(metabric_prob_THR25_quartiles)
summary(Fit_sig_metabric_os_coxph_THR25_quartiles)
# fit
Fit_sig_metabric_os_coxph_THR25_quartiles <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ metabric_prob_THR25_quartiles, data = CoxData_metabric)
summary(Fit_sig_metabric_os_coxph_THR25_quartiles)
Fit_sig_metabric_os_coxph_THR50_1_quartiles <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ metabric_prob_THR50_1_quartiles, data = CoxData_metabric)
summary(Fit_sig_metabric_os_coxph_THR25_quartiles)
summary(Fit_sig_metabric_os_coxph_THR50_1_quartiles)
Fit_sig_metabric_os_coxph_THR50_2_quartiles <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ metabric_prob_THR50_2_quartiles, data = CoxData_metabric)
summary(Fit_sig_metabric_os_coxph_THR50_2_quartiles)
summary_metabric_os_coxph_THR25_quartiles <- summary(Fit_sig_metabric_os_coxph_THR25_quartiles)
summary_metabric_os_coxph_THR50_1_quartiles <- summary(Fit_sig_metabric_os_coxph_THR50_1_quartiles)
Fit_sig_metabric_os_coxph_THR50_2_quartiles <- coxph(Surv(Overall.Survival..Months., Overall.Survival.Status) ~ metabric_prob_THR50_2_quartiles, data = CoxData_metabric)
summary_metabric_os_coxph_THR50_2_quartiles <- summary(Fit_sig_metabric_os_coxph_THR50_2_quartiles)
summary_list_metabric_os_quartiles <- list(summary_metabric_os_coxph_THR25_quartiles, summary_metabric_os_coxph_THR50_1_quartiles, summary_metabric_os_coxph_THR50_2_quartiles)
names(summary_list_metabric_os_quartiles)
summary_list_metabric_os_quartiles <- list(THR25 = summary_metabric_os_coxph_THR25_quartiles, THR50_1 = summary_metabric_os_coxph_THR50_1_quartiles, THR50_2 = summary_metabric_os_coxph_THR50_2_quartiles)
names(summary_list_metabric_os_quartiles)
# get the HR
HR_list_metabric_os_coxph_quartiles <- lapply(summary_list_metabric_os_quartiles, function(x){
HR <- x$conf.int[, 'exp(coef)']
Pvalue_Likelihood_ratio_test <- x$logtest['pvalue']
Pvalue_logrank_test <- x$sctest['pvalue']
Pvalue_wald_test <- x$waldtest['pvalue']
data.frame(HR = HR, Pvalue_Likelihood_ratio_test = Pvalue_Likelihood_ratio_test,
Pvalue_logrank_test = Pvalue_logrank_test, Pvalue_wald_test = Pvalue_wald_test)
})
# get the HR
HR_list_metabric_os_coxph_quartiles <- lapply(summary_list_metabric_os_quartiles, function(x){
HR <- x$conf.int[, 'exp(coef)']
Pvalue_Likelihood_ratio_test <- x$logtest['pvalue']
Pvalue_logrank_test <- x$sctest['pvalue']
Pvalue_wald_test <- x$waldtest['pvalue']
data.frame(HR = HR, Pvalue_Likelihood_ratio_test = Pvalue_Likelihood_ratio_test,
Pvalue_logrank_test = Pvalue_logrank_test, Pvalue_wald_test = Pvalue_wald_test)
})
HR_df_TCGA_os_coxph_quartiles <- as.data.frame(do.call(rbind, HR_list_metabric_os_coxph_quartiles))
HR_df_TCGA_os_coxph_quartiles$variable <- rownames(HR_df_TCGA_os_coxph_quartiles)
HR_df_TCGA_os_coxph_quartiles <- HR_df_TCGA_os_coxph_quartiles[order(HR_df_TCGA_os_coxph_quartiles$HR, decreasing = T), ]
View(HR_df_TCGA_os_coxph_quartiles)
HR_df_TCGA_os_coxph_quartiles_THR25 <- as.data.frame(HR_list_metabric_os_coxph_quartiles$THR25)
View(HR_df_TCGA_os_coxph_quartiles_THR25)
HR_df_TCGA_os_coxph_quartiles$quartile <- gsub('.+quartiles', '', rownames(HR_df_TCGA_os_coxph_quartiles))
View(HR_df_TCGA_os_coxph_quartiles_THR25)
HR_df_TCGA_os_coxph_quartiles_THR25 <- as.data.frame(HR_list_metabric_os_coxph_quartiles$THR25)
HR_df_TCGA_os_coxph_quartiles_THR25$quartile <- gsub('.+quartiles', '', rownames(HR_df_TCGA_os_coxph_quartiles_THR25))
# save the results
write.csv(HR_df_TCGA_os_coxph_quartiles_THR25, 'objs/HR/metabric/HR_df_TCGA_os_coxph_quartiles_THR25.csv')
HR_df_metabric_os_coxph_quartiles_THR25 <- as.data.frame(HR_list_metabric_os_coxph_quartiles$THR25)
HR_df_metabric_os_coxph_quartiles_THR25$quartile <- gsub('.+quartiles', '', rownames(HR_df_metabric_os_coxph_quartiles_THR25))
# save the results
write.csv(HR_df_metabric_os_coxph_quartiles_THR25, 'objs/HR/metabric/THR25_quartiles_HR.csv')
summary_metabric_os_coxph_THR50_2_quartiles
summary_metabric_os_coxph_THR50_2_quartiles$conf.int
# get the HR
HR_list_metabric_os_coxph_quartiles <- lapply(summary_list_metabric_os_quartiles, function(x){
HR <- x$conf.int[, 'exp(coef)']
lower_95CI <- x$conf.int[, 'lower .95']
upper_95CI <- x$conf.int[, 'upper .95']
Pvalue_Likelihood_ratio_test <- x$logtest['pvalue']
Pvalue_logrank_test <- x$sctest['pvalue']
Pvalue_wald_test <- x$waldtest['pvalue']
data.frame(HR = HR, lower_95CI = lower_95CI, upper_95CI = upper_95CI, Pvalue_Likelihood_ratio_test = Pvalue_Likelihood_ratio_test,
Pvalue_logrank_test = Pvalue_logrank_test, Pvalue_wald_test = Pvalue_wald_test)
})
HR_df_metabric_os_coxph_quartiles_THR25 <- as.data.frame(HR_list_metabric_os_coxph_quartiles$THR25)
HR_df_metabric_os_coxph_quartiles_THR25$quartile <- gsub('.+quartiles', '', rownames(HR_df_metabric_os_coxph_quartiles_THR25))
HR_df_metabric_os_coxph_quartiles_THR25
# save the results
write.csv(HR_df_metabric_os_coxph_quartiles_THR25, 'objs/HR/metabric/THR25_quartiles_HR.csv')
HR_df_metabric_os_coxph_quartiles_THR50_1 <- as.data.frame(HR_list_metabric_os_coxph_quartiles$THR50_1)
HR_df_metabric_os_coxph_quartiles_THR50_1$quartile <- gsub('.+quartiles', '', rownames(HR_df_metabric_os_coxph_quartiles_THR50_1))
write.csv(HR_df_metabric_os_coxph_quartiles_THR50_1, 'objs/HR/metabric/THR50_1_quartiles_HR.csv')
HR_df_metabric_os_coxph_quartiles_THR50_1
HR_df_metabric_os_coxph_quartiles_THR50_2 <- as.data.frame(HR_list_metabric_os_coxph_quartiles$THR50_2)
HR_df_metabric_os_coxph_quartiles_THR50_2$quartile <- gsub('.+quartiles', '', rownames(HR_df_metabric_os_coxph_quartiles_THR50_2))
write.csv(HR_df_metabric_os_coxph_quartiles_THR50_2, 'objs/HR/metabric/THR50_2_quartiles_HR.csv')
# save the results
write.csv(HR_df_metabric_os_coxph_quartiles_THR25, 'objs/HR/metabric/OS/THR25_quartiles_HR.csv')
write.csv(HR_df_metabric_os_coxph_quartiles_THR50_1, 'objs/HR/metabric/OS/THR50_1_quartiles_HR.csv')
write.csv(HR_df_metabric_os_coxph_quartiles_THR50_2, 'objs/HR/metabric/OS/THR50_2_quartiles_HR.csv')
Fit_sig_metabric_RFS_coxph_THR25 <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_prob_THR25, data = CoxData_metabric)
summary(Fit_sig_metabric_RFS_coxph_THR25)
Fit_sig_metabric_RFS_coxph_THR50_1 <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_prob_THR50_1, data = CoxData_metabric)
summary(Fit_sig_metabric_coxph_THR50_1)
Fit_sig_metabric_RFS_coxph_THR50_2 <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ Train_prob_THR50_2, data = CoxData_metabric)
summary(Fit_sig_metabric_RFS_coxph_THR50_2)
# make a factor with Q1 (lowest risk) being the reference
CoxData_metabric$metabric_prob_THR25_quartiles <- factor(CoxData_metabric$metabric_prob_THR25_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR25_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR25_quartiles))
CoxData_metabric$metabric_prob_THR50_1_quartiles <- factor(CoxData_metabric$metabric_prob_THR50_1_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR50_1_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR50_1_quartiles))
CoxData_metabric$metabric_prob_THR50_2_quartiles <- factor(CoxData_metabric$metabric_prob_THR50_2_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR50_2_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR50_2_quartiles))
# fit
Fit_sig_metabric_RFS_coxph_THR25_quartiles <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ metabric_prob_THR25_quartiles, data = CoxData_metabric)
metabric_prob_THR50_1_quartiles
CoxData_metabric$metabric_prob_THR50_1_quartiles
# create a merged pdata and Z-scores object
CoxData_metabric <- data.frame(Phenotype_metabric)
# divide the probabilities into quartiles
CoxData_metabric <- CoxData_metabric %>%
mutate(metabric_prob_THR25_quartiles = ntile(Train_prob_THR25, 4),
metabric_prob_THR50_1_quartiles = ntile(Train_prob_THR50_1, 4),
metabric_prob_THR50_2_quartiles = ntile(Train_prob_THR50_2, 4))
# make a factor with Q1 (lowest risk) being the reference
CoxData_metabric$metabric_prob_THR25_quartiles <- factor(CoxData_metabric$metabric_prob_THR25_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR25_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR25_quartiles))
CoxData_metabric$metabric_prob_THR50_1_quartiles <- factor(CoxData_metabric$metabric_prob_THR50_1_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR50_1_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR50_1_quartiles))
CoxData_metabric$metabric_prob_THR50_2_quartiles <- factor(CoxData_metabric$metabric_prob_THR50_2_quartiles, levels = c('1', '2', '3', '4'))
levels(CoxData_metabric$metabric_prob_THR50_2_quartiles) <- paste0('Q', levels(CoxData_metabric$metabric_prob_THR50_2_quartiles))
# fit
Fit_sig_metabric_RFS_coxph_THR25_quartiles <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ metabric_prob_THR25_quartiles, data = CoxData_metabric)
summary_metabric_RFS_coxph_THR25_quartiles <- summary(Fit_sig_metabric_RFS_coxph_THR25_quartiles)
Fit_sig_metabric_RFS_coxph_THR50_1_quartiles <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ metabric_prob_THR50_1_quartiles, data = CoxData_metabric)
summary_metabric_RFS_coxph_THR50_1_quartiles <- summary(Fit_sig_metabric_RFS_coxph_THR50_1_quartiles)
Fit_sig_metabric_RFS_coxph_THR50_2_quartiles <- coxph(Surv(Relapse.Free.Status..Months., Relapse.Free.Status) ~ metabric_prob_THR50_2_quartiles, data = CoxData_metabric)
summary_metabric_RFS_coxph_THR50_2_quartiles <- summary(Fit_sig_metabric_RFS_coxph_THR50_2_quartiles)
summary_list_metabric_RFS_quartiles <- list(THR25 = summary_metabric_RFS_coxph_THR25_quartiles, THR50_1 = summary_metabric_RFS_coxph_THR50_1_quartiles, THR50_2 = summary_metabric_RFS_coxph_THR50_2_quartiles)
# get the HR
HR_list_metabric_RFS_coxph_quartiles <- lapply(summary_list_metabric_RFS_quartiles, function(x){
HR <- x$conf.int[, 'exp(coef)']
lower_95CI <- x$conf.int[, 'lower .95']
upper_95CI <- x$conf.int[, 'upper .95']
Pvalue_Likelihood_ratio_test <- x$logtest['pvalue']
Pvalue_logrank_test <- x$sctest['pvalue']
Pvalue_wald_test <- x$waldtest['pvalue']
data.frame(HR = HR, lower_95CI = lower_95CI, upper_95CI = upper_95CI, Pvalue_Likelihood_ratio_test = Pvalue_Likelihood_ratio_test,
Pvalue_logrank_test = Pvalue_logrank_test, Pvalue_wald_test = Pvalue_wald_test)
})
HR_df_metabric_RFS_coxph_quartiles_THR25 <- as.data.frame(HR_list_metabric_RFS_coxph_quartiles$THR25)
HR_df_metabric_RFS_coxph_quartiles_THR25$quartile <- gsub('.+quartiles', '', rownames(HR_df_metabric_RFS_coxph_quartiles_THR25))
HR_df_metabric_RFS_coxph_quartiles_THR50_1 <- as.data.frame(HR_list_metabric_RFS_coxph_quartiles$THR50_1)
HR_df_metabric_RFS_coxph_quartiles_THR50_1$quartile <- gsub('.+quartiles', '', rownames(HR_df_metabric_RFS_coxph_quartiles_THR50_1))
HR_df_metabric_RFS_coxph_quartiles_THR50_2 <- as.data.frame(HR_list_metabric_RFS_coxph_quartiles$THR50_2)
HR_df_metabric_RFS_coxph_quartiles_THR50_2$quartile <- gsub('.+quartiles', '', rownames(HR_df_metabric_RFS_coxph_quartiles_THR50_2))
# save the results
write.csv(HR_df_metabric_RFS_coxph_quartiles_THR25, 'objs/HR/metabric/RFS/THR25_quartiles_HR.csv')
write.csv(HR_df_metabric_RFS_coxph_quartiles_THR50_1, 'objs/HR/metabric/RFS/THR50_1_quartiles_HR.csv')
write.csv(HR_df_metabric_RFS_coxph_quartiles_THR50_2, 'objs/HR/metabric/RFS/THR50_2_quartiles_HR.csv')
